{"version":3,"sources":["API.js","component/NivoLine.js","App.js","index.js"],"names":["API_URL","covidData","a","fetch","response","json","covidRule","NivoLine","newCase","useState","setLineData","useEffect","data","result","map","x","date","y","new_cases","fetchMyAPI","id","margin","top","right","bottom","left","xScale","type","xFormat","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","axisLeft","colors","scheme","pointSize","pointColor","from","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","App","setNewCase","todayDate","setTodayDate","setNewRule","rule","dateFormat","year","month","day","Date","toLocaleDateString","todayCase","newReg","restriction","ruleTab","document","getElementById","ruleDiv","createElement","appendChild","innerHTML","className","defaultTab","onChange","tabId","console","log","tabFor","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f6690b2.chunk.js","sourcesContent":["const API_URL = 'https://merncovid19dashboard.herokuapp.com/';\r\n\r\nexport async function covidData() {\r\n    const response = await fetch(`${API_URL}/api/data`);\r\n    return response.json();\r\n}\r\n\r\nexport async function covidRule() {\r\n    const response = await fetch(`${API_URL}/api/rules`);\r\n    return response.json();\r\n}","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nimport { covidData } from '../API';\r\n\r\n// make sure parent container have a defined height when using responsive component,\r\n// otherwise height will be 0 and no chart will be rendered.\r\n// website examples showcase many properties, you'll often use just a few of them.\r\n\r\nfunction NivoLine(newCase) {\r\n    const [lineData, setLineData] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchMyAPI() {\r\n            let data = await covidData();\r\n            \r\n            let result = data.map(({ date:x, new_cases:y}) => ({x, y}));\r\n            \r\n            let line = [({\r\n                \"id\" : \"New Cases\",\r\n                \"color\" : \"hsl(279, 70%, 50%)\",\r\n                \"data\" : result\r\n            })];\r\n            \r\n            setLineData(line);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, []);\r\n\r\n\r\n    const exlineData = [({\r\n        \"id\" : \"New Cases\",\r\n        \"color\" : \"hsl(279, 70%, 50%)\",\r\n        \"data\" : [\r\n            {\r\n                x: \"April 5, 2021\",\r\n                y: 869\r\n            },\r\n            {\r\n                x: \"April 6, 2021\",\r\n                y: 1000\r\n            },\r\n        ]\r\n    })];\r\n    \r\n    return (\r\n        <div id=\"graph\">\r\n            <ResponsiveLine\r\n                data={exlineData}\r\n                margin={{ top: 50, right: 110, bottom: 50, left: 50 }}\r\n                xScale={{ type: 'point' }}\r\n                xFormat=\" =-\"\r\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n                yFormat=\" >-.2f\"\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={{\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                }}\r\n                axisLeft={{\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                }}\r\n                colors={{ scheme: 'blues' }}\r\n                pointSize={10}\r\n                pointColor={{ from: 'color' }}\r\n                pointBorderWidth={0}\r\n                pointBorderColor={{ from: 'serieColor' }}\r\n                pointLabelYOffset={-12}\r\n                useMesh={true}\r\n                legends={[\r\n                    {\r\n                        anchor: 'right',\r\n                        direction: 'column',\r\n                        justify: false,\r\n                        translateX: 100,\r\n                        translateY: 0,\r\n                        itemsSpacing: 0,\r\n                        itemDirection: 'left-to-right',\r\n                        itemWidth: 80,\r\n                        itemHeight: 20,\r\n                        itemOpacity: 0.75,\r\n                        symbolSize: 12,\r\n                        symbolShape: 'circle',\r\n                        symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                    itemOpacity: 1\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NivoLine;","import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\n\nimport 'react-web-tabs/dist/react-web-tabs.css';\n\nimport { covidData } from './API';\nimport { covidRule } from './API';\nimport NivoLine from \"./component/NivoLine\";\n\nfunction App() {\n\n  const [newCase, setNewCase] = useState();\n  const [todayDate, setTodayDate] = useState();\n  const [newRule, setNewRule] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const data = await covidData();\n      const rule = await covidRule();\n      \n      // get new case for today\n      const dateFormat = {year: 'numeric', month: 'long', day: 'numeric' };\n      const date = new Date(data[0].date).toLocaleDateString(\"en-US\", dateFormat);\n      const todayCase = data[0].new_cases;\n      \n      // get new rule\n      const newReg = rule[0].restriction;\n\n      setNewCase(todayCase);\n      setTodayDate(date);\n      setNewRule(newReg);\n\n      const ruleTab = document.getElementById(\"rule\");\n      const ruleDiv = document.createElement(\"div\");\n      ruleTab.appendChild(ruleDiv);\n      ruleDiv.innerHTML = newReg;\n\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p id=\"staySafe\">STAY SAFE</p>\n        <p id=\"subTitle\">Covid-19 Daily New Cases and Lastest Regulation for British Colombia</p>\n      </header>\n      <Tabs defaultTab=\"data\" onChange={(tabId) => { console.log(tabId) }}>\n        <TabList>\n          <Tab tabFor=\"data\">New Cases</Tab>\n          <Tab tabFor=\"rule\">Restriction</Tab>\n        </TabList>\n        <TabPanel tabId=\"data\">\n        <div className=\"cardOut\">\n          <div className=\"card\">\n            <h3>Last Update</h3>\n            <hr />\n            <p>{todayDate}</p> \n          </div>\n          <div className=\"card left\">\n            <h3>Today's New Cases</h3>\n            <hr />\n            <p> {newCase}</p>\n          </div>\n          </div>\n          <br />\n          <NivoLine \n            newCase = {newCase}\n          />\n        </TabPanel>\n        <TabPanel tabId=\"rule\">\n        </TabPanel>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}